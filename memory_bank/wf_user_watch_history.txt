## 当前任务:
创建用户观影历史记录功能,用于保存用户观看的电影、剧集和服务器信息。

## 简单计划:
创建一个新模块用于追踪用户观看的电影、剧集和服务器信息,并记录观看进度。

## 步骤:
1. 创建 WatchHistory 数据模型,包含用户、电影、剧集、服务器和进度字段
2. 实现数据库操作的数据仓库层
3. 实现业务逻辑的服务层
4. 创建 REST API 的 DTO 和 GraphQL 的输入/类型定义
5. 实现 GraphQL API 的解析器
6. 实现 REST API 的控制器
7. 在 app.module.ts 中注册模块

## 已完成:
- 创建了 WatchHistory 数据模型,包含用户、电影、剧集和服务器信息字段
- 添加了 WatchProgress 嵌入式模型用于记录观看进度
- 实现了 WatchHistoryRepository 用于数据库操作
- 实现了 WatchHistoryService 用于保存和获取历史记录
- 创建了 REST API 的 DTO 和 GraphQL 的输入/类型定义
- 实现了 WatchHistoryResolver 用于 GraphQL API
- 实现了 WatchHistoryController 用于 REST API
- 创建了 WatchHistoryModule 并在 app.module.ts 中注册

## 待完成:
- 添加前端集成,在播放过程中保存观看历史
- 创建显示观看历史的 UI 组件
- 在首页实现"继续观看"功能
- 添加从保存的时间戳继续观看的功能
